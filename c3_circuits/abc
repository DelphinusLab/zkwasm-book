
## 2.3 Arithmetic Circuits
Arithmetic circuits are a crucial building block in the ZKSNARK of a program. Among various arithmetic circuit systems investigated recently, we use the Halo2â€™s circuit system for its flexibility in customization and better integration with polynomial lookup and shuffle to representing set inclusion.

A circuit is defined by a tuple $(G, C)$ where $G$ is a $n$ column matrix with rows to befilled later and $C$ is a set of constraints on a row basis. More precisely, suppose that each cell in $G$ is indexed (relative to a row $l$) as $G_{l,c,r} = G[l+r][c]$, then each constraint $C_i$ in $C$ is one of thefollowing form

**Equation 1.**
$$
    C_i(l) = \begin{cases} P \left(G_{l, c_0, r_0}, G_{l, c_1, r_1}, \cdots, G_{l, c_k, r_k}\right) = 0 \\
        E \left(G_{l, c_0, r_0}, G_{l, c_1, r_1}, \cdots, G_{l, c_k, r_k}\right) \in T
    \end{cases}
$$
where $c_k$, $r_k$ are constants, $P$, $E$ and $T$ are fixed multi-linear polynomials.

In the rest of this document, we use $cur$ as the current row that $C_i$ is apply on and use the abbrevation $G_{r,c}$ to denote $G[cur+r][c]$ to emphasize the column $c$. With this notation, we see that the constraint system $C$ provides a flexible way for us to define constraint of cells of a row and their neibours.

For example, given the following summarize function $sum$
```
function sum(v) {
    for (acc=0,i=0;i<v.length;i++) {
        acc +=v[i];
    }
    return acc;
}
```
The circuit for it can be constructed as in **Table 1** and the constraint system enforced on each row is defined in **Equation 2**.

**Table 1.** Circuit matrix of sum
|  s  |       acc        | operand |
| --- | ---------------- |-------  |
|  1  |     $acc_0 = 0$    |   $v_0$    |
|  1  | $acc_1 = acc_0 +v_0$ |   $v_1$    |
|  1  |       ...        |   ...   |
|  0  |      $acc_k$     |   nil   |

**Equation 2.** Constraint of sum
$$
 C(cur) = \begin{cases}
     s.(cur) \times (acc.(cur) + operand.(cur) - acc.(cur+1)) = 0 \\
     s.(cur) \times (1-s.(cur)) = 0
 \end{cases}
$$

**Remark:** Notice that the first constraint ensures that addition is applied to each row except forthe last row, and the second constraint enforces that $s$ is either 1 or 0).

Motivated by the above example, we present the formal definition of arithmetic circuits as follows.

**Definition 2.2** (Arithmetic Circuit). An arithmetic circuit is a matrix $G$ with $m$ columns equipped with a constraint system $C$ that each constraint $C_i$ of $C$ is defined as in **Equation 1** and for each row $cur$ in the matrix $C(cur)$ holds.
